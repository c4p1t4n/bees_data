version: "3.8"

services:
  airflow:
    image: apache/airflow:2.8.1
    container_name: airflow
    restart: always
    ports:
      - "8080:8080"
    environment:
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: sqlite:////opt/airflow/airflow.db
      AIRFLOW__CORE__EXECUTOR: SequentialExecutor
      AIRFLOW__WEBSERVER__SECRET_KEY: my_secret
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      PYTHONPATH: /opt/airflow:/opt/airflow/src
      AWS_ACCESS_KEY_ID: airflowuser
      AWS_SECRET_ACCESS_KEY: airflowpass123
      S3_ENDPOINT_URL: http://minio:9000
    volumes:
      - ./src:/opt/airflow/src
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./requirements.txt:/requirements.txt
    entrypoint: /bin/bash
    command: >
      -c "
      pip install --no-cache-dir -r /requirements.txt;
      pip install pyspark;
      if [ ! -f /opt/airflow/airflow.db ]; then
        airflow db init &&
        airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com;
      fi;
      airflow scheduler & 
      exec airflow webserver
      "

  minio:
    image: minio/minio:latest
    container_name: minio
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data

  minio-create-bucket:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: /bin/sh
    command: >
      -c "
      sleep 5;
      mc alias set local http://minio:9000 minio minio123;
      mc mb -p local/datalake || true;
      exit 0;
      "

  minio-create-user:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: /bin/sh
    command: >
      -c "
      sleep 5;
      mc alias set local http://minio:9000 minio minio123;
      mc admin user add local airflowuser airflowpass123;
      mc admin policy attach local readwrite --user airflowuser;
      exit 0;
      "

volumes:
  minio_data:
